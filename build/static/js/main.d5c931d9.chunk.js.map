{"version":3,"sources":["assets/images/twitter-logo.png","componentes/header/Header.js","componentes/modalContainer/ModalContainer.js","componentes/formSendTuit/FormSendTuit.js","componentes/SendTuit/SendTuit.js","componentes/Tuit/Tuit.js","componentes/listTuits/ListTuits.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","TwitterLogo","ModalContainer","props","isOpenModal","closeModal","children","Modal","open","onClose","closeAfterTransition","FormSendTuit","sendTuit","useState","name","tuit","time","formValue","setFormValue","onSubmit","event","onChange","target","value","onFormChange","FormControl","FormGroup","TextField","type","placeholder","margin","multiline","rows","Button","SendTuit","setToastProps","allTuits","setIsOpenModal","Fab","color","aria-label","onClick","preventDefault","allTuitsArray","text","Moment","push","localStorage","setItem","JSON","stringify","Tuit","indice","deleteTuit","Card","CardContent","moment","format","listTuits","length","container","spacing","map","index","item","xs","App","toastProps","setAllTuits","reloadTuits","setReloadTuits","useEffect","todosTuits","parse","getItem","Container","maxWidth","splice","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5c931d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.b413b75b.png\";","import React from \"react\";\r\nimport \"./header.scss\";\r\nimport TwitterLogo from \"../../assets/images/twitter-logo.png\";\r\n\r\nexport default function Header (){\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={TwitterLogo}/>\r\n            <h1>Simulador de tuits</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Modal} from \"@material-ui/core\";\r\nimport \"./modalContainer.scss\";\r\n\r\nexport default function ModalContainer (props){\r\n    const {isOpenModal,closeModal, children}= props;\r\n    return (\r\n        <Modal className=\"modal\"\r\n        open={isOpenModal}\r\n        onClose={closeModal}\r\n        closeAfterTransition>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {FormControl,FormGroup,TextField,Button} from \"@material-ui/core\"\r\n\r\nimport \"./formSendTuit.scss\";\r\n\r\nexport default function FormSendTuit(props){\r\n    const {sendTuit} = props\r\n    const [formValue, setFormValue]= useState({\r\n        name: \" \",\r\n        tuit: \" \",\r\n        time: null\r\n    })\r\n    const onFormChange = event => {\r\n        setFormValue ({\r\n            ...formValue,\r\n            [event.target.name]: [event.target.value]\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"formSendTuit\">\r\n            <h2 className=\"formSendTuit__title\">Enviar Tweet</h2>\r\n            <form className=\"formSendTuit__form\" onSubmit={(event)=>{sendTuit(event,formValue)}} onChange={(event)=> {onFormChange(event)}}>\r\n            <FormControl>\r\n                <FormGroup>\r\n                    <TextField className=\"formSendTuit__formName\" type=\"text\" name=\"name\" placeholder=\"Nombre usuario\" margin=\"normal\"/>\r\n                </FormGroup>\r\n\r\n            </FormControl>\r\n            <FormGroup>\r\n                <TextField className=\"formSendTuit__formTextArea\" name=\"tuit\" multiline rows=\"6\" placeholder=\"Escribe tu tweet\" margin=\"normal\"/>\r\n            </FormGroup>\r\n            <Button type=\"submit\">Enviar tweet</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport \"./sendTuit.scss\";\r\nimport {Fab} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Moment from \"moment\";\r\nimport ModalContainer from \"../modalContainer/ModalContainer\";\r\nimport FormSendTuit from \"../formSendTuit/FormSendTuit\";\r\n\r\nexport default function SendTuit (props){\r\n    const {setToastProps,allTuits} = props\r\n const [isOpenModal,setIsOpenModal] = useState(false);\r\n\r\n const openModal = ()=>{\r\n     setIsOpenModal(true);\r\n }\r\n const closeModal = ()=>{\r\n     setIsOpenModal(false);\r\n }\r\n\r\n const sendTuit = (event,formValue)=>{\r\n    event.preventDefault();\r\n    const {name, tuit} = formValue;\r\n    let allTuitsArray = []\r\n    if(allTuits){\r\n        allTuitsArray = allTuits\r\n    }\r\n    if(name == \" \" || tuit == \" \"){\r\n        setToastProps({\r\n            open: true,\r\n            text: \"Todos los campos son obligatorios\"\r\n        });\r\n    }else{\r\n        setToastProps({\r\n            open: true,\r\n            text: \"Tuit enviado correctamente\"\r\n        });\r\n       formValue.time = Moment(); \r\n       allTuitsArray.push(formValue)\r\n       localStorage.setItem(\"tuits\",JSON.stringify(allTuitsArray));\r\n       closeModal();\r\n    }\r\n    allTuitsArray= []\r\n}\r\n    return (\r\n        <div className=\"sendTuit\">\r\n            <Fab className=\"sendTuit__abrirModal\"\r\n            color=\"primary\" \r\n            aria-label=\"add\" \r\n            onClick={openModal} >\r\n                <AddIcon/>\r\n            </Fab>\r\n            <ModalContainer isOpenModal={isOpenModal} closeModal={closeModal}>\r\n                <FormSendTuit sendTuit={sendTuit} />\r\n            </ModalContainer>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Card,CardContent} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\n\r\nimport \"./tuit.scss\";\r\n\r\nexport default function Tuit(props){\r\n    const {tuit: {name, tuit,time}, indice,deleteTuit}= props\r\n    \r\n\r\n    return(\r\n        <Card className=\"tuit\">\r\n            <CardContent>\r\n                <div className=\"headerTuit\">\r\n                    <h5>{name}</h5>\r\n                    <DeleteTwoToneIcon onClick={()=>{deleteTuit(indice)}}/>\r\n                </div>\r\n                <p>{tuit}</p>\r\n                <div className=\"TuitFecha\">\r\n                    {moment(time).format(\"DD/MM/YYYY HH:mm\")}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import React from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport \"./listTuits.scss\";\r\nimport Tuit from \"../Tuit/Tuit\"\r\n\r\nexport default function listTuits(props){\r\n    let {allTuits,deleteTuit} = props\r\n    if(!allTuits || allTuits== null || allTuits.length == 0){\r\n        return (\r\n            <div className=\"listTuitsEmpty\">\r\n                <h2>No hay tuits</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div container spacing={3} className=\"listTuit\">\r\n            {\r\n            allTuits.map((tuit,index)=>{\r\n             return(<div key={index} item xs={4}>\r\n                    <Tuit tuit = {tuit} indice = {index} deleteTuit={deleteTuit}/>\r\n                    </div>\r\n            )})\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}","import React,{useState,useEffect} from \"react\";\nimport Header from \"./componentes/header/Header\";\nimport {Container, Snackbar} from \"@material-ui/core\";\nimport SendTuit from \"./componentes/SendTuit/SendTuit\";\nimport ListTuits from \"./componentes/listTuits/ListTuits\";\n\nfunction App() {\n  const [toastProps,setToastProps]= useState({\n    open: false,\n    text: null\n  })\n  const [allTuits,setAllTuits] = useState([])\n  const [reloadTuits,setReloadTuits] = useState(false);\n  useEffect(() =>{\n    let todosTuits = JSON.parse(localStorage.getItem(\"tuits\"));\n    setAllTuits(todosTuits);\n    setReloadTuits(false);\n  },[reloadTuits]) \n  const deleteTuit =(index)=>{\n      allTuits.splice(index,1)\n      setAllTuits(allTuits)\n      localStorage.setItem(\"tuits\",JSON.stringify(allTuits)); \n      setReloadTuits(true);    \n  }\n  return (\n   <Container className=\"simuladorTuits\" maxWidth={false}>\n     <Header/>\n     <SendTuit setToastProps={setToastProps} allTuits={allTuits}/> \n     <ListTuits allTuits={allTuits} deleteTuit={deleteTuit}/>\n     <Snackbar anchorOrigin={{vertical:\"top\",horizontal:\"rigth\"}} open={toastProps.open} autoHideDuration={1000} message={<span id=\"message-id\">{toastProps.text}</span>}/>\n   </Container> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}